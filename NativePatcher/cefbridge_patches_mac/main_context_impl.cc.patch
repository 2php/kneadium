//###_ORIGINAL D:\projects\cef_binary_3.3071.1647.macos\tests\cefclient\browser//main_context_impl.cc
//###_START 0
#include "tests/shared/common/client_switches.h"
//###_APPEND_START 0
#include "tests/cefclient/myext/ExportFuncs.h"
#include "tests/cefclient/myext/mycef_msg_const.h"
//###_APPEND_STOP
//###_START 1
// The default URL to load in a browser window.
//###_APPEND_START 1
const char kDefaultUrl[] = "about:blank";
//const char kDefaultUrl[] = "http://www.google.com";
//###_APPEND_STOP
//###_SKIP_UNTIL_AND_ACCEPT 1
}  // namespace
//###_START 3
if (main_url_.empty())
//###_APPEND_START 3
{
main_url_ = kDefaultUrl;
}
//###_APPEND_STOP
//###_SKIP_UNTIL_AND_ACCEPT 3
use_windowless_rendering_ =
//###_START 2
std::string MainContextImpl::GetConsoleLogPath() {
//###_APPEND_START 2
if (this->myMxCallback_) {

MethodArgs args;
memset(&args, 0, sizeof(MethodArgs));
this->myMxCallback_(CEF_MSG_MainContext_GetConsoleLogPath, &args);
CefString cefStr(args.ReadOutputAsString(0));
return cefStr;
}
else {
return GetAppWorkingDirectory() + "console.log";
}
//###_APPEND_STOP
//###_SKIP_UNTIL_AND_ACCEPT 2
}
//###_START 3
void MainContextImpl::PopulateSettings(CefSettings* settings) {
//###_FIND_NEXT_LANDMARK 3
CefString(&settings->cache_path) =
//###_FIND_NEXT_LANDMARK 3
command_line_->GetSwitchValue(switches::kCachePath);
//###_APPEND_START 3
if (this->myMxCallback_) {
//send direct setting? 
this->myMxCallback_(CEF_MSG_CefSettings_Init, settings);
}
//###_APPEND_STOP
