//---THIS-FILE-WAS-PATCHED , org=D:\projects\cef_binary_3.3071.1647.win32\cpptoc\register_cdm_callback_cpptoc.cc
// Copyright (c) 2017 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=22598eaff6bdb3ebecc52d1161ed222203216963$
//

#include "libcef_dll/cpptoc/register_cdm_callback_cpptoc.h"

//---kneadium-ext-begin
#include "../myext/ExportFuncAuto.h"
#include "../myext/InternalHeaderForExportFunc.h"
//---kneadium-ext-end

namespace {

// MEMBER FUNCTIONS - Body may be edited by hand.

void CEF_CALLBACK register_cdm_callback_on_cdm_registration_complete(
    struct _cef_register_cdm_callback_t* self,
    cef_cdm_registration_error_t result,
    const cef_string_t* error_message) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  DCHECK(self);
  if (!self)
    return;
  // Unverified params: error_message

//---kneadium-ext-begin91
#if ENABLE_KNEADIUM_EXT
auto me = CefRegisterCdmCallbackCppToC::Get(self);
const int CALLER_CODE=(CefRegisterCdmCallbackExt::_typeName << 16) | CefRegisterCdmCallbackExt::CefRegisterCdmCallbackExt_OnCdmRegistrationComplete_1;
auto m_callback= me->GetManagedCallBack(CALLER_CODE);
if(m_callback){
CefString tmp_arg2 (error_message);
CefRegisterCdmCallbackExt::OnCdmRegistrationCompleteArgs args1(result,tmp_arg2);
m_callback(CALLER_CODE, &args1.arg);
 if (((args1.arg.myext_flags >> 21) & 1) == 1){
return;
}
}
#endif
//---kneadium-ext-end

  // Execute
  CefRegisterCdmCallbackCppToC::Get(self)->OnCdmRegistrationComplete(
      result, CefString(error_message));
}

}  // namespace

// CONSTRUCTOR - Do not edit by hand.

CefRegisterCdmCallbackCppToC::CefRegisterCdmCallbackCppToC() {
  GetStruct()->on_cdm_registration_complete =
      register_cdm_callback_on_cdm_registration_complete;
}

template <>
CefRefPtr<CefRegisterCdmCallback> CefCppToCRefCounted<
    CefRegisterCdmCallbackCppToC,
    CefRegisterCdmCallback,
    cef_register_cdm_callback_t>::UnwrapDerived(CefWrapperType type,
                                                cef_register_cdm_callback_t*
                                                    s) {
  NOTREACHED() << "Unexpected class type: " << type;
  return NULL;
}

#if DCHECK_IS_ON()
template <>
base::AtomicRefCount
    CefCppToCRefCounted<CefRegisterCdmCallbackCppToC,
                        CefRegisterCdmCallback,
                        cef_register_cdm_callback_t>::DebugObjCt = 0;
#endif

template <>
CefWrapperType CefCppToCRefCounted<CefRegisterCdmCallbackCppToC,
                                   CefRegisterCdmCallback,
                                   cef_register_cdm_callback_t>::kWrapperType =
    WT_REGISTER_CDM_CALLBACK;
